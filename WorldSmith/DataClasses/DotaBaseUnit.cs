/*****************************  NOTICE  ********************************************
* This file was autogenerated.  Do not edit.                                       *
* Instead, modify the schema in DataSchema related to this class and regenerate it *
***********************************************************************************/
using System;
using System.ComponentModel;

namespace WorldSmith.DataClasses
{
	class DotaBaseUnit : DotaDataObject
	{
		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("models/error.mdl")]
		public string Model
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("0")]
		public string SoundSet
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(1)]
		public int Level
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(4)]
		public int AbilityLayout
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("")]
		public string Ability1
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("")]
		public string Ability2
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("")]
		public string Ability3
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("")]
		public string Ability4
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("")]
		public string Ability5
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("")]
		public string Ability6
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("")]
		public string Ability7
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("")]
		public string Ability8
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(-1)]
		public int ArmorPhysical
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(25)]
		public int MagicalResistance
		{
			get;
			set;
		}

		public enum AttackCapabilitiesEnum
		{
			DOTA_UNIT_CAP_NO_ATTACK,
			DOTA_UNIT_CAP_RANGED_ATTACK,
			DOTA_UNIT_CAP_MELEE_ATTACK,
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(AttackCapabilitiesEnum.DOTA_UNIT_CAP_RANGED_ATTACK)]
		public AttackCapabilitiesEnum AttackCapabilities
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(1)]
		public int AttackDamageMin
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(1)]
		public int AttackDamageMax
		{
			get;
			set;
		}

		public enum AttackDamageTypeEnum
		{
			DAMAGE_TYPE_ArmorPhysical,
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(AttackDamageTypeEnum.DAMAGE_TYPE_ArmorPhysical)]
		public AttackDamageTypeEnum AttackDamageType
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(1.7)]
		public float AttackRate
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0.75)]
		public float AttackAnimationPoint
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(true)]
		public bool AttackAcquisitionRange
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(600)]
		public int AttackRange
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("ranged_hero")]
		public string ProjectileModel
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(900)]
		public int ProjectileSpeed
		{
			get;
			set;
		}

		public enum AttributePrimaryEnum
		{
			DOTA_ATTRIBUTE_STRENGTH,
			DOTA_ATTRIBUTE_AGILITY,
			DOTA_ATTRIBUTE_INTELLECT,
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(AttributePrimaryEnum.DOTA_ATTRIBUTE_STRENGTH)]
		public AttributePrimaryEnum AttributePrimary
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0)]
		public int AttributeBaseStrength
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0)]
		public int AttributeStrengthGain
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0)]
		public int AttributeBaseIntelligence
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0)]
		public int AttributeIntelligenceGain
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0)]
		public int AttributeBaseAgility
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0)]
		public int AttributeAgilityGain
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(62)]
		public int BountyXP
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0)]
		public int BountyGoldMin
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0)]
		public int BountyGoldMax
		{
			get;
			set;
		}

		public enum BoundsHullNameEnum
		{
			DOTA_HULL_SIZE_HERO,
			DOTA_HULL_SIZE_SMALL,
			DOTA_HULL_SIZE_REGULAR,
			DOTA_HULL_SIZE_TOWER,
			DOTA_HULL_SIZE_FILLER,
			DOTA_HULL_SIZE_BARRACKS,
			DOTA_HULL_SIZE_BUILDING,
			DOTA_HULL_SIZE_SIEGE,
			DOTA_HULL_SIZE_HUGE,
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(BoundsHullNameEnum.DOTA_HULL_SIZE_HERO)]
		public BoundsHullNameEnum BoundsHullName
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(70)]
		public int RingRadius
		{
			get;
			set;
		}

		public enum MovementCapabilitiesEnum
		{
			DOTA_UNIT_CAP_MOVE_NONE,
			DOTA_UNIT_CAP_MOVE_GROUND,
			DOTA_UNIT_CAP_MOVE_FLY,
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(MovementCapabilitiesEnum.DOTA_UNIT_CAP_MOVE_GROUND)]
		public MovementCapabilitiesEnum MovementCapabilities
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(300)]
		public int MovementSpeed
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0.5)]
		public float MovementTurnRate
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(false)]
		public bool HasAggressiveStance
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(150)]
		public int StatusHealth
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0.25)]
		public float StatusHealthRegen
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0)]
		public int StatusMana
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(0.01)]
		public float StatusManaRegen
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(-1)]
		public int StatusStartingMana
		{
			get;
			set;
		}

		public enum TeamNameEnum
		{
			DOTA_TEAM_NEUTRALS,
			DOTA_TEAM_BADGUYS,
			DOTA_TEAM_GOODGUYS,
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(TeamNameEnum.DOTA_TEAM_GOODGUYS)]
		public TeamNameEnum TeamName
		{
			get;
			set;
		}

		public enum CombatClassAttackEnum
		{
			DOTA_COMBAT_CLASS_ATTACK_HERO,
			DOTA_COMBAT_CLASS_ATTACK_PIERCE,
			DOTA_COMBAT_CLASS_ATTACK_BASIC,
			DOTA_COMBAT_CLASS_ATTACK_SIEGE,
			DOTA_COMBAT_CLASS_ATTACK_LIGHT,
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(CombatClassAttackEnum.DOTA_COMBAT_CLASS_ATTACK_HERO)]
		public CombatClassAttackEnum CombatClassAttack
		{
			get;
			set;
		}

		public enum CombatClassDefendEnum
		{
			DOTA_COMBAT_CLASS_DEFEND_HERO,
			DOTA_COMBAT_CLASS_DEFEND_SOFT,
			DOTA_COMBAT_CLASS_DEFEND_STRUCTURE,
			DOTA_COMBAT_CLASS_DEFEND_STRONG,
			DOTA_COMBAT_CLASS_DEFEND_BASIC,
			DOTA_COMBAT_CLASS_DEFEND_WEAK,
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(CombatClassDefendEnum.DOTA_COMBAT_CLASS_DEFEND_HERO)]
		public CombatClassDefendEnum CombatClassDefend
		{
			get;
			set;
		}

		public enum UnitRelationshipClassEnum
		{
			DOTA_NPC_UNIT_RELATIONSHIP_TYPE_DEFAULT,
			DOTA_NPC_UNIT_RELATIONSHIP_TYPE_BUILDING,
			DOTA_NPC_UNIT_RELATIONSHIP_TYPE_BARRACKS,
			DOTA_NPC_UNIT_RELATIONSHIP_TYPE_SIEGE,
			DOTA_NPC_UNIT_RELATIONSHIP_TYPE_WARD,
			DOTA_NPC_UNIT_RELATIONSHIP_TYPE_COURIER,
			DOTA_NPC_UNIT_RELATIONSHIP_TYPE_HERO,
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(UnitRelationshipClassEnum.DOTA_NPC_UNIT_RELATIONSHIP_TYPE_HERO)]
		public UnitRelationshipClassEnum UnitRelationshipClass
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(1800)]
		public int VisionDaytimeRange
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(800)]
		public int VisionNighttimeRange
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(true)]
		public bool HasInventory
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(-1)]
		public int HealthBarOffset
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("")]
		public string IdleSoundLoop
		{
			get;
			set;
		}

	}
}
