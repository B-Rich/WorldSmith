/*****************************  NOTICE  ********************************************
* This file was autogenerated.  Do not edit.                                       *
* Instead, modify the schema in DataSchema related to this class and regenerate it *
***********************************************************************************/
using System;
using System.ComponentModel;
using WorldSmith.Panels;
using WorldSmith.Dialogs;
using KVLib;

namespace WorldSmith.DataClasses
{
	public partial class DotaHero : DotaBaseUnit
	{
		public DotaHero(KeyValue kv)
			: base(kv)
		{
		}
		public DotaHero(string className)
			: base(className)
		{
		}
		[Category("General")]
		[Description("Enable/disable this hero.")]
		[DefaultValue(true)]
		public bool Enabled
		{
			get
			{
				KeyValue kv = GetSubkey("Enabled");
				return (kv == null ? true : kv.GetBool());
			}
			set
			{
				KeyValue kv = GetSubkey("Enabled");
				if(kv == null)
				{
					kv = new KeyValue("Enabled");
					KeyValue.AddChild(kv);
				}
				kv.Set(value);
			}
		}

		[Category("General")]
		[Description("Does this hero have bot AI implemented?")]
		[DefaultValue(false)]
		public bool BotImplemented
		{
			get
			{
				KeyValue kv = GetSubkey("BotImplemented");
				return (kv == null ? false : kv.GetBool());
			}
			set
			{
				KeyValue kv = GetSubkey("BotImplemented");
				if(kv == null)
				{
					kv = new KeyValue("BotImplemented");
					KeyValue.AddChild(kv);
				}
				kv.Set(value);
			}
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(false)]
		public bool NewHero
		{
			get
			{
				KeyValue kv = GetSubkey("NewHero");
				return (kv == null ? false : kv.GetBool());
			}
			set
			{
				KeyValue kv = GetSubkey("NewHero");
				if(kv == null)
				{
					kv = new KeyValue("NewHero");
					KeyValue.AddChild(kv);
				}
				kv.Set(value);
			}
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(false)]
		public bool HeroPool1
		{
			get
			{
				KeyValue kv = GetSubkey("HeroPool1");
				return (kv == null ? false : kv.GetBool());
			}
			set
			{
				KeyValue kv = GetSubkey("HeroPool1");
				if(kv == null)
				{
					kv = new KeyValue("HeroPool1");
					KeyValue.AddChild(kv);
				}
				kv.Set(value);
			}
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(1)]
		public int HeroUnlockOrder
		{
			get
			{
				KeyValue kv = GetSubkey("HeroUnlockOrder");
				return (kv == null ? 1 : kv.GetInt());
			}
			set
			{
				KeyValue kv = GetSubkey("HeroUnlockOrder");
				if(kv == null)
				{
					kv = new KeyValue("HeroUnlockOrder");
					KeyValue.AddChild(kv);
				}
				kv.Set(value);
			}
		}

		[Category("General")]
		[Description("Enable/disable this hero in Captain's Mode.")]
		[DefaultValue(false)]
		public bool CMEnabled
		{
			get
			{
				KeyValue kv = GetSubkey("CMEnabled");
				return (kv == null ? false : kv.GetBool());
			}
			set
			{
				KeyValue kv = GetSubkey("CMEnabled");
				if(kv == null)
				{
					kv = new KeyValue("CMEnabled");
					KeyValue.AddChild(kv);
				}
				kv.Set(value);
			}
		}

		[Category("General")]
		[Description("No Description Set")]
		[DefaultValue(false)]
		public bool CMTournamentIgnore
		{
			get
			{
				KeyValue kv = GetSubkey("CMTournamentIgnore");
				return (kv == null ? false : kv.GetBool());
			}
			set
			{
				KeyValue kv = GetSubkey("CMTournamentIgnore");
				if(kv == null)
				{
					kv = new KeyValue("CMTournamentIgnore");
					KeyValue.AddChild(kv);
				}
				kv.Set(value);
			}
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(false)]
		public bool new_player_enable
		{
			get
			{
				KeyValue kv = GetSubkey("new_player_enable");
				return (kv == null ? false : kv.GetBool());
			}
			set
			{
				KeyValue kv = GetSubkey("new_player_enable");
				if(kv == null)
				{
					kv = new KeyValue("new_player_enable");
					KeyValue.AddChild(kv);
				}
				kv.Set(value);
			}
		}

		[Category("Voice")]
		[Description("No Description Set")]
		[DefaultValue("")]
		public string VoiceBackgroundSound
		{
			get
			{
				KeyValue kv = GetSubkey("VoiceBackgroundSound");
				return (kv == null ? "" : kv.GetString());
			}
			set
			{
				KeyValue kv = GetSubkey("VoiceBackgroundSound");
				if(kv == null)
				{
					kv = new KeyValue("VoiceBackgroundSound");
					KeyValue.AddChild(kv);
				}
				kv.Set(value);
			}
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("scenes\\default_idle.vcd")]
		public string IdleExpression
		{
			get
			{
				KeyValue kv = GetSubkey("IdleExpression");
				return (kv == null ? "scenes\\default_idle.vcd" : kv.GetString());
			}
			set
			{
				KeyValue kv = GetSubkey("IdleExpression");
				if(kv == null)
				{
					kv = new KeyValue("IdleExpression");
					KeyValue.AddChild(kv);
				}
				kv.Set(value);
			}
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("")]
		public string HUD
		{
			get
			{
				KeyValue kv = GetSubkey("HUD");
				return (kv == null ? "" : kv.GetString());
			}
			set
			{
				KeyValue kv = GetSubkey("HUD");
				if(kv == null)
				{
					kv = new KeyValue("HUD");
					KeyValue.AddChild(kv);
				}
				kv.Set(value);
			}
		}

		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue("")]
		public string override_hero
		{
			get
			{
				KeyValue kv = GetSubkey("override_hero");
				return (kv == null ? "" : kv.GetString());
			}
			set
			{
				KeyValue kv = GetSubkey("override_hero");
				if(kv == null)
				{
					kv = new KeyValue("override_hero");
					KeyValue.AddChild(kv);
				}
				kv.Set(value);
			}
		}

	}
}
