/*****************************  NOTICE  ********************************************
* This file was autogenerated.  Do not edit.                                       *
* Instead, modify the schema in DataSchema related to this class and regenerate it *
***********************************************************************************/
using System;
using System.ComponentModel;
using WorldSmith.Panels;
using WorldSmith.Dialogs;
using KVLib;

namespace WorldSmith.DataClasses
{
	[DotaAction]
	[EditorGrammar("Create a thinking %ModifierName wall that is %Width by %Length units rotated %Rotation degrees at %Target")]
	public partial class CreateThinkerWall : CreateThinker
	{
		public CreateThinkerWall(KeyValue kv)
			: base(kv)
		{
		}
		public CreateThinkerWall(string className)
			: base(className)
		{
		}
		[Category("Misc")]
		[Description("int")]
		[DefaultValue(typeof(NumberValue), "")]
		public NumberValue Width
		{
			get
			{
				return default(NumberValue);
			}
			set
			{
				KeyValue kv = GetSubkey("Width");
				if(kv == null)
				{
					kv = new KeyValue("Width");
					KeyValue.AddChild(kv);
				}
				kv.Set(value.ToString());
			}
		}

		[Category("Misc")]
		[Description("int")]
		[DefaultValue(typeof(NumberValue), "")]
		public NumberValue Length
		{
			get
			{
				return default(NumberValue);
			}
			set
			{
				KeyValue kv = GetSubkey("Length");
				if(kv == null)
				{
					kv = new KeyValue("Length");
					KeyValue.AddChild(kv);
				}
				kv.Set(value.ToString());
			}
		}

		[Category("Misc")]
		[Description("rotation")]
		[DefaultValue(typeof(NumberValue), "")]
		public NumberValue Rotation
		{
			get
			{
				return default(NumberValue);
			}
			set
			{
				KeyValue kv = GetSubkey("Rotation");
				if(kv == null)
				{
					kv = new KeyValue("Rotation");
					KeyValue.AddChild(kv);
				}
				kv.Set(value.ToString());
			}
		}

	}
}
