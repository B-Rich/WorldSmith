/*****************************  NOTICE  ********************************************
* This file was autogenerated.  Do not edit.                                       *
* Instead, modify the schema in DataSchema related to this class and regenerate it *
***********************************************************************************/
using System;
using System.ComponentModel;
using WorldSmith.Panels;
using WorldSmith.Dialogs;

namespace WorldSmith.DataClasses
{
	[DotaAction]
	[EditorGrammar("No Editor Grammar set")]
	public partial class LinearProjectile : TargetedAction
	{
		[Category("Misc")]
		[Description("Effect Name")]
		[DefaultValue("")]
		public string EffectName
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("int")]
		[DefaultValue("")]
		public string MoveSpeed
		{
			get;
			set;
		}

		public enum StartPositionEnum
		{
			attach_attack1,
			attach_attack2,
			attach_attack4,
			attach_hitloc,
			attach_weapon_chain_rt,
			attach_attach_1,
			attach_ability1,
			attach_head,
			attach_mouth,
			attach_tail,
			attach_sword,
			attach_left_eye,
			attach__right_eye,
			attach_spear_end,
			attach_static,
			attach_eye_r,
			attach_eye_l,
			attach_mane1,
			attach_mane2,
			attach_mane3,
			attach_mane4,
			attach_mane5,
			attach_mane6,
			attach_mane7,
			attach_mane8,
			attach_maneR,
			attach_maneL,
			attach_hand_r,
			attach_hand_l,
			attach_mouthFire,
			attach_cast4_primal_roar,
			attach_neck,
			attach_wing_barb_1,
			attach_wing_barb_2,
			attach_wing_barb_3,
			attach_wing_barb_4,
			attach_orb3,
			attach_orb2,
			attach_orb1,
			attach_rocket,
			attach_staff_base,
			attach_thorax,
			attach_weapon1,
			attach_weapon2,
			attach_fuse,
			attach_rocket1,
			attach_rocket2,
			attach_ogerhead,
			attach_key,
			attach_toss,
			attach_staffend,
			attach_wingtipR,
			attach_wingtipL,
			attach_tail_tip,
			attach_wing_L0,
			attach_wing_R0,
			attach_wing_L1,
			attach_wing_R1,
			attach_chain_rt,
			attach_chain_lf,
			attach_chain_rt0,
			attach_chain_lf0,
			attach_hoof_R,
			attach_hoof_L,
			attach_horn,
			attach_chimmney,
			attach_to_hands,
			attach_to_hands_vm_only,
			attach_to_rootbone,
			attach_type,
			attach_entity,
		}

		[Category("Misc")]
		[Description("Effect Name")]
		[DefaultValue(StartPositionEnum.attach_attack1)]
		public StartPositionEnum StartPosition
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("int")]
		[DefaultValue("")]
		public string StartRadius
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("int")]
		[DefaultValue("")]
		public string EndRadius
		{
			get;
			set;
		}

		[Flags]
		public enum TargetTeamsFlags
		{
			DOTA_UNIT_TARGET_TEAM_NONE = 0,
			DOTA_UNIT_TARGET_TEAM_ENEMY = 1 << 1,
			DOTA_UNIT_TARGET_TEAM_FRIENDLY = 1 << 2,
			DOTA_UNIT_TARGET_TEAM_CUSTOM = 1 << 3,
			DOTA_UNIT_TARGET_TEAM_BOTH = DOTA_UNIT_TARGET_TEAM_ENEMY | DOTA_UNIT_TARGET_TEAM_FRIENDLY,
			DOTA_UNIT_TARGET_ALL = 0xFFFF,
		}

		[Editor(typeof(FlagEnumDialogUIEditor), typeof(System.Drawing.Design.UITypeEditor))]
		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(TargetTeamsFlags.DOTA_UNIT_TARGET_TEAM_NONE)]
		public TargetTeamsFlags TargetTeams
		{
			get;
			set;
		}

		[Flags]
		public enum TargetTypesFlags
		{
			DOTA_UNIT_TARGET_NONE = 0,
			DOTA_UNIT_TARGET_HERO = 1 << 1,
			DOTA_UNIT_TARGET_CREEP = 1 << 2,
			DOTA_UNIT_TARGET_BUILDING = 1 << 3,
			DOTA_UNIT_TARGET_MECHANICAL = 1 << 4,
			DOTA_UNIT_TARGET_COURIER = 1 << 5,
			DOTA_UNIT_TARGET_OTHER = 1 << 6,
			DOTA_UNIT_TARGET_TREE = 1 << 7,
			DOTA_UNIT_TARGET_CUSTOM = 1 << 8,
			DOTA_UNIT_TARGET_BASIC = 1 << 9,
			DOTA_UNIT_TARGET_ALL = 0xFFFF,
		}

		[Editor(typeof(FlagEnumDialogUIEditor), typeof(System.Drawing.Design.UITypeEditor))]
		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(TargetTypesFlags.DOTA_UNIT_TARGET_NONE)]
		public TargetTypesFlags TargetTypes
		{
			get;
			set;
		}

		[Flags]
		public enum TargetFlagsFlags
		{
			DOTA_UNIT_TARGET_FLAG_NONE = 0,
			DOTA_UNIT_TARGET_FLAG_RANGED_ONLY = 1 << 1,
			DOTA_UNIT_TARGET_FLAG_MELEE_ONLY = 1 << 2,
			DOTA_UNIT_TARGET_FLAG_DEAD = 1 << 3,
			DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES = 1 << 4,
			DOTA_UNIT_TARGET_FLAG_NOT_MAGIC_IMMUNE_ALLIES = 1 << 5,
			DOTA_UNIT_TARGET_FLAG_INVULNERABLE = 1 << 6,
			DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE = 1 << 7,
			DOTA_UNIT_TARGET_FLAG_NO_INVIS = 1 << 8,
			DOTA_UNIT_TARGET_FLAG_NOT_ANCIENTS = 1 << 9,
			DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED = 1 << 10,
			DOTA_UNIT_TARGET_FLAG_NOT_DOMINATED = 1 << 11,
			DOTA_UNIT_TARGET_FLAG_NOT_SUMMONED = 1 << 12,
			DOTA_UNIT_TARGET_FLAG_NOT_ILLUSION = 1 << 13,
			DOTA_UNIT_TARGET_FLAG_NOT_ATTACK_IMMUNE = 1 << 14,
			DOTA_UNIT_TARGET_FLAG_MANA_ONLY = 1 << 15,
			DOTA_UNIT_TARGET_FLAG_CHECK_DISABLE_HELP = 1 << 16,
			DOTA_UNIT_TARGET_FLAG_NOT_CREEP_HERO = 1 << 17,
			DOTA_UNIT_TARGET_FLAG_OUT_OF_WORLD = 1 << 18,
			DOTA_UNIT_TARGET_FLAG_NOT_NIGHTMARED = 1 << 19,
		}

		[Editor(typeof(FlagEnumDialogUIEditor), typeof(System.Drawing.Design.UITypeEditor))]
		[Category("Misc")]
		[Description("No Description Set")]
		[DefaultValue(TargetFlagsFlags.DOTA_UNIT_TARGET_FLAG_NONE)]
		public TargetFlagsFlags TargetFlags
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("bool")]
		[DefaultValue("")]
		public string HasFrontalCone
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("bool")]
		[DefaultValue("")]
		public string ProvidesVision
		{
			get;
			set;
		}

		[Category("Misc")]
		[Description("int")]
		[DefaultValue("")]
		public string VisionRadius
		{
			get;
			set;
		}

	}
}
